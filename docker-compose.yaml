version: '3.9'
services:
  nginx:
    build:
      context: .
      dockerfile: "Dockerfile.nginx"
    container_name: booking_nginx
    ports:
      - 6999:80
      - 6998:443
    links:
      - booking
      - flower

  db:
    image: postgres:16
    container_name: booking_db
    env_file:
      - .env-non-dev
#    ports:
#      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: [ "/booking/docker/app.sh" ]
#    ports:
#      - 7777:8000

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery
    command: [ "/booking/docker/celery.sh", "celery" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower
    command: [ "/booking/docker/celery.sh", "flower" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
#    ports:
#      - 5555:5555


  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
#    ports:
#      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
#    ports:
#      - 3000:3000

volumes:
  postgresdata:
  grafanadata:
  prometheusdata:

